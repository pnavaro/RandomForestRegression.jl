var documenterSearchIndex = {"docs":
[{"location":"#RandomForestRegression.jl","page":"RandomForestRegression.jl","title":"RandomForestRegression.jl","text":"","category":"section"},{"location":"","page":"RandomForestRegression.jl","title":"RandomForestRegression.jl","text":"Documentation for RandomForestRegression.jl","category":"page"},{"location":"","page":"RandomForestRegression.jl","title":"RandomForestRegression.jl","text":"","category":"page"},{"location":"","page":"RandomForestRegression.jl","title":"RandomForestRegression.jl","text":"Modules = [RandomForestRegression]","category":"page"},{"location":"#RandomForestRegression.cstd-Tuple{Any}","page":"RandomForestRegression.jl","title":"RandomForestRegression.cstd","text":"cstd(a)\n\nCustom stddev as std([1]) is NaN but should be 0 for most\n\n\n\n\n\n","category":"method"},{"location":"#RandomForestRegression.get_best_split-NTuple{7, Any}","page":"RandomForestRegression.jl","title":"RandomForestRegression.get_best_split","text":"get_best_split(feature_matrix, left_ys, right_ys, left_idxs, right_idxs, feature_idx, train_ys; run_no=1)\n\nGet the best split object by choosing a random feature and then gets the best split.  If no split is found repeat this for 5 times Return the split object\n\n\n\n\n\n","category":"method"}]
}
